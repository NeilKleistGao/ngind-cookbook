<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classngind_1_1Program" kind="class" language="C++" prot="public">
    <compoundname>ngind::Program</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classngind_1_1Program_1a15abd282b21825ec70d01f986607ac69" prot="private" static="no" mutable="no">
        <type>GLuint</type>
        <definition>GLuint ngind::Program::_program</definition>
        <argsstring></argsstring>
        <name>_program</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="92" column="12" bodyfile="ngind/kernel/render/program.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classngind_1_1Program_1aec0c0e77803a3956a76935e9b02fb585" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngind::Program::Program</definition>
        <argsstring>(const std::string &amp;)</argsstring>
        <name>Program</name>
        <param>
          <type>const std::string &amp;</type>
          <defname>program_name</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>const</parametername>
</parameternamelist>
<parameterdescription>
<para>std::string&amp;: program&apos;s name </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><xrefsect id="todo_1_todo000005"><xreftitle>Todo</xreftitle><xrefdescription><para>error process </para>
</xrefdescription></xrefsect></para>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="47" column="14" bodyfile="ngind/kernel/render/program.cc" bodystart="33" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1a082d05e0c5d6a30107ad002a12567a95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngind::Program::~Program</definition>
        <argsstring>()</argsstring>
        <name>~Program</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="50" column="5" bodyfile="ngind/kernel/render/program.cc" bodystart="52" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1a7ae9ac8f6678bd2d4752698ef5c066b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ngind::Program::Program</definition>
        <argsstring>(const Program &amp;)=delete</argsstring>
        <name>Program</name>
        <param>
          <type>const <ref refid="classngind_1_1Program" kindref="compound">Program</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="52" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1a5e02ac9d5ed27d40754705875d2175b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classngind_1_1Program" kindref="compound">Program</ref> &amp;</type>
        <definition>Program&amp; ngind::Program::operator=</definition>
        <argsstring>(const Program &amp;)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classngind_1_1Program" kindref="compound">Program</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="53" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1a463d2757f43590b0d50501f7d9d4828e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ngind::Program::use</definition>
        <argsstring>() const</argsstring>
        <name>use</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="59" column="17" bodyfile="ngind/kernel/render/program.h" bodystart="59" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1a67907db5f3403eb1c126c090493f1ce8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ngind::Program::setVector4</definition>
        <argsstring>(const std::string &amp;name, const glm::vec4 &amp;v)</argsstring>
        <name>setVector4</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::vec4 &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="68" column="17" bodyfile="ngind/kernel/render/program.h" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1a703dc42682910e644ea6c7a5050ea060" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ngind::Program::setMatrix4</definition>
        <argsstring>(const std::string &amp;name, const glm::mat4 &amp;m)</argsstring>
        <name>setMatrix4</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const glm::mat4 &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="77" column="17" bodyfile="ngind/kernel/render/program.h" bodystart="77" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classngind_1_1Program_1aa0e119a52e700045da612246dceebe2d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void ngind::Program::setInteger</definition>
        <argsstring>(const std::string &amp;name, const int &amp;i)</argsstring>
        <name>setInteger</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ngind/kernel/render/program.h" line="86" column="17" bodyfile="ngind/kernel/render/program.h" bodystart="86" bodyend="88"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="ngind/kernel/render/program.h" line="43" column="14" bodyfile="ngind/kernel/render/program.h" bodystart="43" bodyend="93"/>
    <listofallmembers>
      <member refid="classngind_1_1Program_1a15abd282b21825ec70d01f986607ac69" prot="private" virt="non-virtual"><scope>ngind::Program</scope><name>_program</name></member>
      <member refid="classngind_1_1Program_1a5e02ac9d5ed27d40754705875d2175b9" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>operator=</name></member>
      <member refid="classngind_1_1Program_1aec0c0e77803a3956a76935e9b02fb585" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>Program</name></member>
      <member refid="classngind_1_1Program_1a7ae9ac8f6678bd2d4752698ef5c066b0" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>Program</name></member>
      <member refid="classngind_1_1Program_1aa0e119a52e700045da612246dceebe2d" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>setInteger</name></member>
      <member refid="classngind_1_1Program_1a703dc42682910e644ea6c7a5050ea060" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>setMatrix4</name></member>
      <member refid="classngind_1_1Program_1a67907db5f3403eb1c126c090493f1ce8" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>setVector4</name></member>
      <member refid="classngind_1_1Program_1a463d2757f43590b0d50501f7d9d4828e" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>use</name></member>
      <member refid="classngind_1_1Program_1a082d05e0c5d6a30107ad002a12567a95" prot="public" virt="non-virtual"><scope>ngind::Program</scope><name>~Program</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
